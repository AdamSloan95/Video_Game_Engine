In the tutorials the tutor is using Intellij and Gradle for build + dependencies

As per most tutorials like this (not their fault)-  when you are using a different platform/OS/any slight difference everything breaks when you
initially try to do the same as they are doing but on your own setup. 

As I am using eclipse and I have a bit of experience from my degree using Maven I decided to use this instead of gradle. 

Issue #1:

Run As > Java Application 

Error: 
GLFW may only be used on the main thread and that thread must be the first thread in the process. 
Please run the JVM with -XstartOnFirstThread. This check may be disabled with Configuration.GLFW_CHECK_THREAD0

The first one being a threading issue- which once I read the documentation for LWJGL it says to use, handily it also told this in the error message.

-XstartOnFirstThread

https://www.lwjgl.org/guide - here

Go to run configurations and under the arguments tab paste this under vm arguments.

Issue #2:

I then though I would use mvn to build from the terminal and run the jar file

mvn clean package

The package seemed to build fine but when I tried to run the jar, I was shown a lot of errors that seemed to be to do with the dependencies from LWJGL.

Although I thought building the application might be covered in a later tutorial I thought it was better to have it running properly from the start

I will not go into detail here about what exactly I did to fix this but if you take a look at the pom.xml the important part is the part commented with shade.

Shade essentially allows the maven to package all the needed dependencies -> including LWJGL ones so it can build properly.

cd "Where ever your main directory is"

So now when i build with:

mvn clean package

then run 

java -jar target/Game-0.0.1-SNAPSHOT.jar   

Throwback to issue #1  - not running on first thread

so use 

java -XstartOnFirstThread -jar target/GameEngine-1.0-SNAPSHOT.jar 

Working!

Ctrl C to stop the process



